# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository.
  name: nestjs-bootstrap

  # A short description of the repository that will show up on GitHub.
  description: A skeleton for NestJS developers.

  # A URL with more information about the repository
  # homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  topics: NestJS, Typescript, NodeJS, JavaScript

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: false

  # Updates the default branch for this repository.
  default_branch: master

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  # Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge
  allow_auto_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

  # Either `true` to make this repo available as a template repository or `false` to prevent it.
  # is_template: false
  # template_repository: false

  # `true` to archive this repository. Note: You cannot unarchive repositories through the API.
  archived: false

  # Either `true`` to allow squash-merge commits to use pull request title, or `false` to use commit message
  use_squash_pr_title_as_default: true

  # Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or `false` otherwise
  allow_update_branch: true

# Labels: define labels for Issues and Pull Requests
# We have disabled Probot managed labels to avoid deletion of dynamically generated labels on pull requests.
labels:
- name: bug
  color: '#cc0000'
  description: An issue with the system üêõ.

- name: feature
  # If including a `#`, make sure to wrap it with quotes!
  color: '#336699'
  description: New functionality

- name: WIP
  # If including a `#`, make sure to wrap it with quotes!
  color: '#faf064'
  description: Work in progress

- name: draft
  # If including a `#`, make sure to wrap it with quotes!
  color: '#c800c8'

- name: stale
  # If including a `#`, make sure to wrap it with quotes!
  color: '#bfdadc'

- name: dependencies
  # If including a `#`, make sure to wrap it with quotes!
  color: '#1d76db'

- name: rightsizing-recommender
  # If including a `#`, make sure to wrap it with quotes!
  color: '#9900ff'
  description: PR creator for spot.io ocean rightsizing suggestions

# Milestones: define milestones for Issues and Pull Requests
# milestones:
#   - title: milestone-title
#     description: milestone-description
#     # The state of the milestone. Either `open` or `closed`
#     state: open

# Collaborators: give specific users access to this repository.
# See https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator for available options
collaborators:
  - username: elied-dev
    # Note: `permission` is only valid on organization-owned repositories.
    # The permission to grant the collaborator. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
    permission: admin

# See https://developer.github.com/v3/teams/#add-or-update-team-repository for available options
teams: []


branches:
- name: master
  # https://docs.github.com/en/rest/reference/repos#update-branch-protection
  # Branch Protection settings. Set to null to disable
  protection:
    # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
    required_pull_request_reviews:
      # The number of approvals required. (1-6)
      required_approving_review_count: 1
      # Dismiss approved reviews automatically when a new commit is pushed.
      dismiss_stale_reviews: true
      # Blocks merge until code owners have reviewed.
      require_code_owner_reviews: true
      # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
      dismissal_restrictions: {}
      # users: []
      # teams: []
      # Allow specific users or teams to bypass pull request requirements. Set to null to disable.
      # bypass_pull_request_allowances:
      #   # The list of user logins allowed to bypass pull request requirements.
      #   users:
      #   # The list of team slugs allowed to bypass pull request requirements.
      #   teams:
    # Required. Require status checks to pass before merging. Set to null to disable
    required_status_checks:
      # Required. Require branches to be up to date before merging.
      strict: true
      # Required. The list of status checks to require in order to merge into this branch
      contexts: []
    # Commits pushed to matching branches must have verified signatures. Set to false to disable.
    required_signatures: false
    # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
    enforce_admins: false
    # Prevents merge commits from being pushed to matching branches. Set to false to disable.
    required_linear_history: true
    # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
    restrictions: null
    #  apps: []
    #  users: []
    #  teams: []
    # Permits force pushes to the protected branch by anyone with write access to the repository. Set to true to allow force pushes. Set to false or null to block force pushes.
    allow_force_pushes: null
    # Allows users with push access to delete matching branches. Set to false to disable.
    allow_deletions: false
    # Ensure all review conversations are seen and addressed prior to merging
    required_conversation_resolution: true
